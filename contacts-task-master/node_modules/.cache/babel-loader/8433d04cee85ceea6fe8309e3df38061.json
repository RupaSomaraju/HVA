{"ast":null,"code":"var _jsxFileName = \"/home/student/Desktop/HVA/contacts-task-master/src/components/AddEditContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact, editContact } from '../redux/actions/contacts-action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddEditContact({\n  addContact,\n  editContactData,\n  editContact\n}) {\n  _s();\n\n  const [contact, setContact] = useState({\n    name: '',\n    phoneNumber: '',\n    email: ''\n  });\n  useEffect(() => {\n    setContact(editContactData);\n  }, [editContactData]);\n\n  const handleChange = (name, value) => {\n    const oldContact = { ...contact\n    };\n    oldContact[name] = value;\n    setContact(oldContact);\n  };\n\n  const handleSubmit = () => {\n    if (contact.id !== null && contact.id !== undefined) {\n      editContact(contact, contact.id);\n      let oldContact = { ...contact\n      };\n      oldContact.id = null;\n      setContact(oldContact);\n    } else {\n      addContact(contact);\n    }\n\n    setContact({\n      name: '',\n      phoneNumber: '',\n      email: ''\n    });\n    closeRef.current.click();\n  };\n\n  const closeRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        id: \"exampleModalLongTitle\",\n        children: \"Add/Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        ref: closeRef,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"formGroupExampleInput\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"formGroupExampleInput\",\n            placeholder: \"Name\",\n            value: contact.name,\n            onChange: e => handleChange('name', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"formGroupExampleInput2\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"formGroupExampleInput2\",\n            placeholder: \"Phone Number\",\n            value: contact.phoneNumber,\n            onChange: e => handleChange('phoneNumber', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"formGroupExampleInput2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"formGroupExampleInput3\",\n            placeholder: \"Email\",\n            value: contact.email,\n            onChange: e => handleChange('email', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => handleSubmit(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditContact, \"4Z8rGlhbt0MUBzh+altI5IVlrzM=\");\n\n_c = AddEditContact;\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: contact => dispatch(addContact(contact)),\n    editContact: (contact, id) => dispatch(editContact(contact, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEditContact);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditContact\");","map":{"version":3,"sources":["/home/student/Desktop/HVA/contacts-task-master/src/components/AddEditContact.js"],"names":["React","useEffect","useRef","useState","connect","addContact","editContact","AddEditContact","editContactData","contact","setContact","name","phoneNumber","email","handleChange","value","oldContact","handleSubmit","id","undefined","closeRef","current","click","e","target","mapStateToProps","state","contacts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {addContact, editContact} from '../redux/actions/contacts-action';\n\nfunction AddEditContact({addContact, editContactData, editContact}) {\n  const [ contact, setContact ] = useState({\n    name: '',\n    phoneNumber: '',\n    email: '',\n  });\n  useEffect(\n    () => {\n      setContact(editContactData);\n    },\n    [ editContactData ],\n  );\n  const handleChange = (name, value) => {\n    const oldContact = {...contact};\n    oldContact[name] = value;\n    setContact(oldContact);\n  };\n  const handleSubmit = () => {\n    if (contact.id !== null && contact.id !== undefined) {\n      editContact(contact, contact.id);\n      let oldContact = {...contact};\n      oldContact.id = null;\n      setContact(oldContact);\n    } else {\n      addContact(contact);\n    }\n    setContact({\n      name: '',\n      phoneNumber: '',\n      email: '',\n    });\n    closeRef.current.click();\n  };\n  const closeRef = useRef();\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\n          Add/Edit Contact\n        </h5>\n        <button type=\"button\" ref={closeRef} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"Name\"\n              value={contact.name}\n              onChange={(e) => handleChange('name', e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Phone Number</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Phone Number\"\n              value={contact.phoneNumber}\n              onChange={(e) => handleChange('phoneNumber', e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput3\"\n              placeholder=\"Email\"\n              value={contact.email}\n              onChange={(e) => handleChange('email', e.target.value)}\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Cancel\n        </button>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleSubmit()}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addContact: (contact) => dispatch(addContact(contact)),\n    editContact: (contact, id) => dispatch(editContact(contact, id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEditContact);\n"]},"metadata":{},"sourceType":"module"}