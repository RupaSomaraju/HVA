{"ast":null,"code":"const initialContacts = {\n  contacts: [{\n    name: 'Rupa',\n    phoneNumber: '1234512345',\n    email: 'rupasarvani'\n  }],\n  contact: {}\n};\nexport const contactsReducer = (state = initialContacts, action) => {\n  switch (action.type) {\n    case 'GET_ALL_CONTACTS':\n      return { ...state\n      };\n\n    case 'ADD_CONTACT':\n      {\n        let contacts = [...state.contacts];\n        contacts.push(action.payload);\n        return { ...state,\n          contacts\n        };\n      }\n\n    case 'EDIT_CONTACT':\n      {\n        let contacts = [...state.contacts];\n        contacts[action.id] = action.payload;\n        return { ...state,\n          contacts\n        };\n      }\n\n    case 'DELETE_CONTACT':\n      {\n        let contacts = [...state.contacts];\n        contacts.splice(action.id, 1);\n        return { ...state,\n          contacts\n        };\n      }\n\n    case 'GET_SINGLE_CONTACT':\n      return { ...state,\n        contact: { ...state.contacts[action.index],\n          id: action.index\n        }\n      };\n\n    case 'FILTER_CONTACTS':\n      {\n        let contacts = [...state.contacts];\n        let filteredContacts = contacts.filter(contact => contact.name.toLowerCase().indexOf(action.searchInput.toLowerCase()) !== -1);\n        return { ...state,\n          contacts: filteredContacts\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/student/Desktop/HVA/contacts-task-master/src/redux/reducers/contacts.js"],"names":["initialContacts","contacts","name","phoneNumber","email","contact","contactsReducer","state","action","type","push","payload","id","splice","index","filteredContacts","filter","toLowerCase","indexOf","searchInput"],"mappings":"AAAA,MAAMA,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,CAAE;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,WAAW,EAAE,YAA5B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GAAF,CADY;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAAxB;AAIA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,eAAT,EAA0BQ,MAA1B,KAAqC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EAAC,GAAGF;AAAJ,OAAP;;AACF,SAAK,aAAL;AAAoB;AAClB,YAAIN,QAAQ,GAAG,CAAE,GAAGM,KAAK,CAACN,QAAX,CAAf;AACAA,QAAAA,QAAQ,CAACS,IAAT,CAAcF,MAAM,CAACG,OAArB;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAWN,UAAAA;AAAX,SAAP;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,YAAIA,QAAQ,GAAG,CAAE,GAAGM,KAAK,CAACN,QAAX,CAAf;AACAA,QAAAA,QAAQ,CAACO,MAAM,CAACI,EAAR,CAAR,GAAsBJ,MAAM,CAACG,OAA7B;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAWN,UAAAA;AAAX,SAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,YAAIA,QAAQ,GAAG,CAAE,GAAGM,KAAK,CAACN,QAAX,CAAf;AACAA,QAAAA,QAAQ,CAACY,MAAT,CAAgBL,MAAM,CAACI,EAAvB,EAA2B,CAA3B;AACA,eAAO,EAAC,GAAGL,KAAJ;AAAWN,UAAAA;AAAX,SAAP;AACD;;AACD,SAAK,oBAAL;AACE,aAAO,EAAC,GAAGM,KAAJ;AAAWF,QAAAA,OAAO,EAAE,EAAC,GAAGE,KAAK,CAACN,QAAN,CAAeO,MAAM,CAACM,KAAtB,CAAJ;AAAkCF,UAAAA,EAAE,EAAEJ,MAAM,CAACM;AAA7C;AAApB,OAAP;;AACF,SAAK,iBAAL;AAAwB;AACtB,YAAIb,QAAQ,GAAG,CAAE,GAAGM,KAAK,CAACN,QAAX,CAAf;AACA,YAAIc,gBAAgB,GAAGd,QAAQ,CAACe,MAAT,CACpBX,OAAD,IAAaA,OAAO,CAACH,IAAR,CAAae,WAAb,GAA2BC,OAA3B,CAAmCV,MAAM,CAACW,WAAP,CAAmBF,WAAnB,EAAnC,MAAyE,CAAC,CADlE,CAAvB;AAGA,eAAO,EAAC,GAAGV,KAAJ;AAAWN,UAAAA,QAAQ,EAAEc;AAArB,SAAP;AACD;;AACD;AACE,aAAOR,KAAP;AA5BJ;AA8BD,CA/BM","sourcesContent":["const initialContacts = {\n  contacts: [ {name: 'Rupa', phoneNumber: '1234512345', email: 'rupasarvani'} ],\n  contact: {},\n};\nexport const contactsReducer = (state = initialContacts, action) => {\n  switch (action.type) {\n    case 'GET_ALL_CONTACTS':\n      return {...state};\n    case 'ADD_CONTACT': {\n      let contacts = [ ...state.contacts ];\n      contacts.push(action.payload);\n      return {...state, contacts};\n    }\n    case 'EDIT_CONTACT': {\n      let contacts = [ ...state.contacts ];\n      contacts[action.id] = action.payload;\n      return {...state, contacts};\n    }\n    case 'DELETE_CONTACT': {\n      let contacts = [ ...state.contacts ];\n      contacts.splice(action.id, 1);\n      return {...state, contacts};\n    }\n    case 'GET_SINGLE_CONTACT':\n      return {...state, contact: {...state.contacts[action.index], id: action.index}};\n    case 'FILTER_CONTACTS': {\n      let contacts = [ ...state.contacts ];\n      let filteredContacts = contacts.filter(\n        (contact) => contact.name.toLowerCase().indexOf(action.searchInput.toLowerCase()) !== -1,\n      );\n      return {...state, contacts: filteredContacts};\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}